package ru.spbu.mas;

import	jade.core.Profile;
import	jade.core.ProfileImpl;
import	jade.core.Runtime;
import	jade.wrapper.AgentController;
import	jade.wrapper.ContainerController;

import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;

class	MainController	{
    private	static	final	int	numberOfAgents	=	5;

    void	initAgents()	{

        //	Retrieve	the	singleton	instance	of	the	JADE	Runtime
        Runtime	rt	=	Runtime.instance();
        //Create	a	container	to	host	the	Default	Agent
        Profile	p	=	new	ProfileImpl();
        p.setParameter(Profile.MAIN_HOST,	"localhost");
        p.setParameter(Profile.MAIN_PORT,	"10098");
        p.setParameter(Profile.GUI,	"true");
        ContainerController	cc	=	rt.createMainContainer(p);
        try	{
            double Sum = 0.0;
            for(int	i=1;	i	<=	MainController.numberOfAgents;	i++)	{
                //^.^ Random number selection
                int RandomNumber = ThreadLocalRandom.current().nextInt(-50, 50 + 1);
                System.out.println("I am Agent #" + i + ", I chose the number: " + RandomNumber);

                //^.^ Sum for Benchmark
                Sum = Sum + RandomNumber;

                //^.^ Possible connections
                ArrayList<String> Sockets = Graph.ReturningArray(i);

                //^.^ Local Memory
                double Memory = RandomNumber;

                //^.^ Reference
                double Reference = Memory;

                //^.^ Consensus Checker
                int Plateau = 0;

                //^.^ Buffer and Status Initialization
                ArrayList<String> Buffer = new ArrayList<String>();
                ArrayList<String> Status = new ArrayList<String>();
                for(int n = 0; n < Sockets.size(); n++)
                {
                    Buffer.add("none");
                    Status.add("update");
                }

                System.out.println("My connections: " + Sockets + ", We are in total: " + numberOfAgents);
                System.out.println();

                Object[] Arguments = {numberOfAgents, Memory, Sockets, Plateau, Buffer, Reference, Status};
                AgentController	agent	=	cc.createNewAgent(Integer.toString(i),	"ru.spbu.mas.DefaultAgent",	Arguments);
                agent.start();
            }

            double Benchmark = Sum/numberOfAgents;
            System.out.println("Benchmark: " + Benchmark);
            System.out.println();

        }	catch	(Exception	e)	{
            e.printStackTrace();
        }
    }
}
